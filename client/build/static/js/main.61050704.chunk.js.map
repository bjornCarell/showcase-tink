{"version":3,"sources":["styles/GlobalStyles.tsx","styles/theme.tsx","components/atoms/TableWrapper/TableWrapper.tsx","components/atoms/Table/Table.tsx","components/atoms/TableHead/TableHead.tsx","components/atoms/TableBody/TableBody.tsx","components/atoms/TableRow/TableRow.tsx","components/atoms/TableCell/TableCell.tsx","components/pages/Categories/Categories.tsx","hooks/useCategories.ts","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","theme","color","primary","primaryLight","primaryBright","primaryDark","secondary","secondaryLight","secondaryDark","secondaryBright","white","black","grey","spacing","xss","xs","small","medium","large","xl","xxl","fontSize","fontWeight","animation","shadowAround","shadowAroundHover","shadowBottom","shadowBottomHover","radiusS","radiusM","radiusL","transition","zIndex","level5","level4","level3","level2","level","TableWrapper","styled","div","Table","props","TableHead","rest","backgroundColor","TableBody","TableRow","evenOdd","TableCell","align","noWrap","noBorder","Categories","useState","locale","setLocale","state","isLoading","categories","setState","useEffect","a","axios","get","params","response","status","data","errorMessage","getCategories","console","log","useCategories","onChange","e","target","value","onSelectLocale","data-test-id","map","category","type","typeName","primaryName","secondaryName","code","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEaA,EAAeC,YAAH,kiBCFZC,EAAQ,CACnBC,MAAO,CACLC,QAAS,eACTC,aAAc,kBACdC,cAAe,qBACfC,YAAa,eACbC,UAAW,mBACXC,eAAgB,mBAChBC,cAAe,kBACfC,gBAAiB,mBACjBC,MAAO,mBACPC,MAAO,gBACPC,KAAM,oBAERC,QAAS,CACPC,IAAK,SACLC,GAAI,UACJC,MAAO,OACPC,OAAQ,OACRC,MAAO,OACPC,GAAI,OACJC,IAAK,SAEPC,SAAU,CACRL,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,GAAI,UACJC,IAAK,WAEPE,WAAY,CACVN,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,GAAI,KAENI,UAAW,CACTC,aAAc,oCACdC,kBAAmB,oCACnBC,aAAc,iCACdC,kBAAmB,iCACnBC,QAAS,WACTC,QAAS,WACTC,QAAS,OACTC,WAAY,yCAEdC,OAAQ,CACNC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,MAAO,I,kDCjDEC,EAAeC,IAAOC,IAAV,iD,uBCCZC,EAA8B,SAACC,GAAD,OAAW,cAAC,IAAD,eAAcA,K,QCMvDC,EAAYJ,aACvB,gBAAMK,EAAN,2BACE,cAAC,IAAD,eAAkBA,MAFGL,CAAH,4HAUA,SAACG,GAAD,OAAYA,EAAMG,gBAAkBH,EAAM1C,MAAMC,MAAMW,KAAO,iB,QChBtEkC,EAAqD,SAACJ,GAAD,OAChE,cAAC,IAAD,eAAkBA,K,QCAPK,EAAWR,aAAO,gBAAMK,EAAN,2BAAiB,cAAC,IAAD,eAAiBA,MAAzCL,CAAH,mCACjB,SAACG,GAAD,OAAWA,EAAMM,SAAN,mFAIeN,EAAM1C,MAAMC,MAAMW,KAJjC,gC,QCKFqC,EAAYV,aAAO,gBAAMK,EAAN,2BAC9B,cAAC,IAAD,eAAkBA,MADKL,CAAH,6FAIJ,SAACG,GAAD,OAAYA,EAAMQ,MAAQR,EAAMQ,MAAQ,UACvC,SAACR,GAAD,OAAYA,EAAMS,OAAS,SAAW,YAErD,SAACT,GAAD,OAAWA,EAAMU,UAAN,uDCRFC,EAAa,WACxB,MAA4BC,mBAAiB,SAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACMC,ECWqB,SAACF,GAC5B,MAA0BD,mBAAqB,CAC7CI,WAAW,EACXC,WAAY,KAFd,mBAAOF,EAAP,KAAcG,EAAd,KAgCA,OA3BAC,qBAAU,YACW,uCAAG,8BAAAC,EAAA,+EAEKC,IAAMC,IAAI,cAAe,CAC9CC,OAAQ,CAAEV,YAHM,UAKM,OAHlBW,EAFY,QAKLC,OALK,gCAMGD,EAASE,KANZ,OAMVA,EANU,OAOhBR,EAAS,CACPF,WAAW,EACXC,WAAYS,IATE,yDAalBR,EAAS,CACPF,WAAW,EACXC,WAAY,GACZU,aAAY,OAhBI,0DAAH,oDAqBnBC,KACC,CAACf,IAEJgB,QAAQC,IAAI,YAAaf,EAAME,WAAW,IAEnCF,ED5COgB,CAAclB,GAM5B,OACE,eAACjB,EAAD,WACE,4CACA,yBAAQoC,SAAU,SAACC,GAAD,OAPC,SAACA,GACtBnB,EAAUmB,EAAEC,OAAOC,OAMQC,CAAeH,IAAxC,UACE,wBAAQE,MAAM,QAAd,wBACA,wBAAQA,MAAM,QAAd,wBAEF,eAAC,EAAD,CAAOE,eAAa,kBAApB,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,mBACA,cAAC,EAAD,wBACA,cAAC,EAAD,2BACA,cAAC,EAAD,kCAGJ,cAAC,EAAD,UAEItB,EAAME,WAAWqB,KAAI,SAACC,GAAD,OACnB,eAAC,EAAD,WACE,cAAC,EAAD,UAAYA,EAASC,OACrB,cAAC,EAAD,UAAYD,EAASE,WACrB,cAAC,EAAD,UAAYF,EAASG,cACrB,cAAC,EAAD,UAAYH,EAASI,kBAJRJ,EAASK,kBE9BzBC,EAAM,kBACjB,eAAC,IAAD,CAAevF,MAAOA,EAAtB,UACE,cAACF,EAAD,IACA,cAAC,EAAD,QCLJ0F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61050704.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  ::before,\n  ::after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n  html {\n    scroll-behavior: smooth;\n    overflow-x: hidden;\n  }\n  body {\n    box-sizing: border-box;\n    font-family: \"nunito\", Avenir, Arial, sans-serif;\n    height: 100%;\n    width: 100%;\n    line-height: 1.2;\n    overflow-x: hidden;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-weight: 600;\n  }\n  p, dl, dd {\n    margin: 0;\n  }\n  code, pre {\n    font-family: Menlo, Consolas, monospace,monospace;\n  }\n`;\n","export const theme = {\n  color: {\n    primary: 'rgb(0,70,80)',\n    primaryLight: 'rgb(66,119,131)',\n    primaryBright: 'rgb(232, 249, 248)',\n    primaryDark: 'rgb(0,58,66)',\n    secondary: 'rgb(248,149,114)',\n    secondaryLight: 'rgb(253,223,212)',\n    secondaryDark: 'rgb(255,138,97)',\n    secondaryBright: 'rgb(255,232,229)',\n    white: 'rgb(255,255,255)',\n    black: 'rgb(38,38,38)',\n    grey: 'rgb(245,246,247)',\n  },\n  spacing: {\n    xss: '0.5rem',\n    xs: '0.75rem',\n    small: '1rem',\n    medium: '2rem',\n    large: '4rem',\n    xl: '8rem',\n    xxl: '16rem',\n  },\n  fontSize: {\n    small: '1.4rem',\n    medium: '1.6rem',\n    large: '2.6rem',\n    xl: '4.22rem',\n    xxl: '6.85rem',\n  },\n  fontWeight: {\n    small: 200,\n    medium: 400,\n    large: 600,\n    xl: 800,\n  },\n  animation: {\n    shadowAround: 'rgba(0,0,0,0.13) 0px 0px 10px 0px',\n    shadowAroundHover: 'rgba(0,0,0,0.13) 0px 0px 16px 0px',\n    shadowBottom: '0px 4px 8px 0 rgba(0,0,0,0.08)',\n    shadowBottomHover: '0px 8px 8px 0 rgba(0,0,0,0.08)',\n    radiusS: '0.375rem',\n    radiusM: '0.875rem',\n    radiusL: '2rem',\n    transition: 'all .25s cubic-bezier(0.4, 0, 0.2, 1)',\n  },\n  zIndex: {\n    level5: 5,\n    level4: 4,\n    level3: 3,\n    level2: 2,\n    level: 1,\n  },\n};\n","import styled from 'styled-components';\n\nexport const TableWrapper = styled.div`\n  overflow-x: auto;\n`;\n","import React from 'react';\nimport MuiTable, { TableProps } from '@material-ui/core/Table';\n\nexport const Table: React.FC<TableProps> = (props) => <MuiTable {...props} />;\n","import React from 'react';\nimport styled from 'styled-components';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport { TableHeadProps } from '@material-ui/core/TableHead/TableHead';\n\nexport type StyledTableHeadProps = {\n  backgroundColor?: string\n}\n\nexport const TableHead = styled(\n  ({ ...rest }: TableHeadProps) => (\n    <MuiTableHead {...rest} />\n  ),\n)<StyledTableHeadProps>`\n  th {\n    text-transform: uppercase;\n    font-weight: 900;\n  }\n\n  background-color: ${(props) => (props.backgroundColor ? props.theme.color.grey : 'transparent')};\n`;\n","import React from 'react';\nimport MuiTableBody, { TableBodyProps } from '@material-ui/core/TableBody';\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = (props) => (\n  <MuiTableBody {...props} />\n);\n","import React from 'react';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport styled from 'styled-components';\n\nexport const TableRow = styled(({ ...rest }) => <MuiTableRow {...rest} />)`\n  ${(props) => props.evenOdd\n    && `\n      && {\n        &:nth-of-type(even) {\n          background-color: ${props.theme.color.grey};\n        }\n      }\n  `}\n`;\n","import React from 'react';\nimport MuiTableCell, { TableCellProps as MuiTableCellProps } from '@material-ui/core/TableCell';\nimport styled from 'styled-components';\n\nexport interface TableCellProps extends MuiTableCellProps {\n  align?: 'center' | 'left' | 'right';\n  noBorder?: boolean;\n  noWrap?: boolean;\n}\n\nexport const TableCell = styled(({ ...rest }) => (\n  <MuiTableCell {...rest} />\n))<TableCellProps>`\n  && {\n    text-align: ${(props) => (props.align ? props.align : 'left')};\n    white-space: ${(props) => (props.noWrap ? 'nowrap' : 'normal')};\n  }\n  ${(props) => props.noBorder\n    && `\n    && {\n      border-bottom: none;\n    }\n  `}\n`;\n","import React, { useState } from 'react';\nimport { useCategories } from '../../../hooks/useCategories';\nimport { TableWrapper } from '../../atoms/TableWrapper/TableWrapper';\nimport { Table } from '../../atoms/Table/Table';\nimport { TableHead } from '../../atoms/TableHead/TableHead';\nimport { TableBody } from '../../atoms/TableBody/TableBody';\nimport { TableRow } from '../../atoms/TableRow/TableRow';\nimport { TableCell } from '../../atoms/TableCell/TableCell';\n\nexport const Categories = (): JSX.Element => {\n  const [locale, setLocale] = useState<string>('en_US');\n  const state = useCategories(locale);\n\n  const onSelectLocale = (e:any):void => {\n    setLocale(e.target.value);\n  };\n\n  return (\n    <TableWrapper>\n      <h1>Categories</h1>\n      <select onChange={(e) => onSelectLocale(e)}>\n        <option value=\"en_US\">English US</option>\n        <option value=\"sv_SE\">Swedish</option>\n      </select>\n      <Table data-test-id=\"categories-list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Type</TableCell>\n            <TableCell>Type Name</TableCell>\n            <TableCell>Primary Name</TableCell>\n            <TableCell>Secondary Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            state.categories.map((category) => (\n              <TableRow key={category.code}>\n                <TableCell>{category.type}</TableCell>\n                <TableCell>{category.typeName}</TableCell>\n                <TableCell>{category.primaryName}</TableCell>\n                <TableCell>{category.secondaryName}</TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    </TableWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type Categories = {\n  code: string,\n  defaultChild: boolean,\n  id: string,\n  parent: string,\n  primaryName: string,\n  searchTerms: null,\n  secondaryName: string,\n  sortOrder: number,\n  type: string,\n  typeName: string\n}\n\nexport type FetchState = {\n  isLoading: boolean;\n  categories: Categories[];\n  errorMessage?:string;\n}\n\nexport const useCategories = (locale: string): FetchState => {\n  const [state, setState] = useState<FetchState>({\n    isLoading: true,\n    categories: [],\n  });\n\n  useEffect(() => {\n    const getCategories = async (): Promise<void> => {\n      try {\n        const response = await axios.get('/categories', {\n          params: { locale },\n        });\n        if (response.status === 200) {\n          const data = await response.data;\n          setState({\n            isLoading: false,\n            categories: data,\n          });\n        }\n      } catch (errorMessage) {\n        setState({\n          isLoading: false,\n          categories: [],\n          errorMessage,\n        });\n      }\n    };\n\n    getCategories();\n  }, [locale]);\n\n  console.log('category1', state.categories[0]);\n\n  return state;\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { theme } from './styles/theme';\nimport { Categories } from './components/pages/Categories/Categories';\n\nexport const App = (): JSX.Element => (\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <Categories />\n  </ThemeProvider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}